import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c as u,d as e,a as l,b as i,f as r}from"./app-9a25ae93.js";const d={},s=l("h2",{id:"java-中-io-流分为几种",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#java-中-io-流分为几种","aria-hidden":"true"},"#"),i(" Java 中 IO 流分为几种?")],-1),c=l("ul",null,[l("li",null,[i("按照流的流向分，可以分为 输入流 和 输出流 "),l("ul",null,[l("li",null,"InputStream / Reader : 所有的输入流的基类，前者是字节输入流，后者是字符输入流"),l("li",null,"OutputStream / Writer : 所有输出流的基类，前者是字节输出流，后者是字符输出流")])]),l("li",null,"按照操作单元划分，可以划分为 字节流 和 字符流"),l("li",null,"按照流的角色划分为 节点流 和 处理流")],-1),h=r('<h2 id="既然有了字节流-为什么还要有字符流" tabindex="-1"><a class="header-anchor" href="#既然有了字节流-为什么还要有字符流" aria-hidden="true">#</a> 既然有了字节流,为什么还要有字符流？</h2><ul><li><strong>字节流</strong><ul><li>字节流则更适合处理二进制数据</li><li>字节流以字节为单位进行输入输出，适用于处理二进制数据（例如图像、音频、视频等）或与底层设备进行通信时。字节流通常用于处理文件和网络连接中的数据传输。它们是处理数据的底层工具，提供了最基本的输入输出操作。</li></ul></li><li><strong>字符流</strong><ul><li>字符流更适合读取和写入文本文件</li><li>字符流以字符为单位进行输入输出，适用于处理文本数据。字符流会自动处理字符编码和解码，而字节流则需要手动处理。这使得字符流在处理文本数据时更方便和高效，尤其是当涉及到国际化和本地化时、</li></ul></li><li>尽管字节流可以处理所有类型的数据，但为了更方便地处理文本数据，Java提供了字符流</li></ul><h2 id="bio、nio、aio" tabindex="-1"><a class="header-anchor" href="#bio、nio、aio" aria-hidden="true">#</a> BIO、NIO、AIO？</h2>',3),I=l("li",null,[l("p",null,"BIO"),l("ul",null,[l("li",null,"同步阻塞IO"),l("li",null,"客户端有连接请求时服务器端就需要启动一个线程进行处理（可以使用连接池优化）"),l("li",null,"JDK1.4之前的选择")])],-1),_=l("p",null,"NIO",-1),O=l("li",null,[l("p",null,"同步非阻塞IO")],-1),f=l("p",null,"服务器端用一个线程处理多个连接，客户端发送的连接请求会注册到多路复用器上，多路复用器轮询到连接有IO请求就进行处理",-1),m=l("p",null,"NIO工作原理",-1),p=l("ol",null,[l("li",null,"应用程序（A）通过选择器（B）发起连接请求"),l("li",null,"选择器（B）将通道（channel代表了服务端与客户端的连接）注册，使其成为监视对象，以便选择器可以监听多个通道的事件。"),l("li",null,"当有新的连接请求到达时，选择器（B）会处理这个事件，并将新的通道（C）加入到已注册的通道列表（D）中，以备后续操作。"),l("li",null,"选择器（B）不断监听通道列表（D）中通道的读写事件。"),l("li",null,"当某个通道（E）有读或写事件时，选择器（B）会将该通道标记为就绪状态，并执行相应的读取或写入操作。"),l("li",null,"读取或写入操作使用缓冲区（F）来处理数据，应用程序可以在缓冲区中读取或写入数据。")],-1),V=l("li",null,[l("p",null,"AIO"),l("ul",null,[l("li",null,"异步非阻塞IO"),l("li",null,"Java 的 NIO 就是 Reactor"),l("li",null,"当有事件触发时，服务器端得到通知，进行相应的处理，完成后才通知(回调)服务端程序启动线程去处理"),l("li",null,"一般适用于连接数较多且连接时间较长的应用")])],-1);function y(B,x){const n=t("Mermaid");return o(),u("div",null,[s,c,e(n,{id:"mermaid-32",code:"eJyNk91ygjAQhe99Cl7AV+gMiP8oVNradqcXQVelrQyNyYVvX0wyEESS5I7db8nuOZsjJeXJizYDrzoXnsnveVFyljKK5CwSt+ODFv3yhsMnL4BJ/ot62ESPIOCHA1Lcu1aEEBJGXOkxxNk37pgrP4HgytCnlFxdS6a3gRnSh/xUIDNI+OWUkd2PAZr3DyaBhVkrCS0hygtc83Nm7CiCFP84FruuU1jsB23nY8661q9AD0sp1sL7VtzIx/VE7jWJkMmdf1Yb4F6xaXbAvShVW/C4IhXMi6F1SbxaBJHUGyQ0LyymbZDskdaVW5AB2e27vsYq0YN+1C2ZuU8YnQgVqplB34fq3rw4WrAAkry03eqPxMpZoFCZc4/5ocyP6/fZR0y0Z6UzXd23NK9uan4wBRlRrcxau6NSvfS8Ft9GLhr5behS6W/jImmADVsJB2zUWu6sDYuVUzonNP4H8kf8dQ=="}),h,e(n,{id:"mermaid-80",code:"eJxLL0osyFDwCeLiUgCC4tIkiMDTdfOe92142jf/+YS2p5N6nnfufNawHKwEBJyiX87Y/XThvKd7+j39YxV0de0UapB1WCk8W9//ZMeqF/vnPetb+mTv/udTVjzZ0QAUeb5r//MV3TUKToYaEDOtFOBG6Sg83zMNKPtsxcKn87qfr2t42jtVE26na/TLufMIWQvUAbHh6ZIWkMuXzII4QQfE2r7+6ZJeoEtqFFyRbEcyVEfhaf/6Z50rn26cCpR7umcXwnaP6Kd7mp6tXYrDXogXIUqeTe59sncOMNCezp73YkNzjYIHwjaICh2FF1tbnu2a8LRjJVDX8772l6tnQKxKzUvhAgBM9N7t"}),l("ul",null,[I,l("li",null,[_,l("ul",null,[O,l("li",null,[f,l("ul",null,[l("li",null,[m,e(n,{id:"mermaid-123",code:"eJxVjb0KwjAURvc+xR11EB9AEOyPk6Co4FAcQrzVgiSSREHI5CoogrOb4CYOIrj4NLV9DPsTxd71fOfcqSCLGQzdhgXptfzoeYyPl/iyjZ77MdRqTR3tD8n9kbxO7905uT7et40Gu1IZ4Byp4qJaLVQ7H/dxGkqFQoPjOzPCGM7HBXdy3qIUFwocnhKqQs7S1r/fyWwGARfQRzKpj0SoELwVMiU1uN8mZDsTds3j8hq6lC5F6nh+htZgTGks72eBSxTR0PbtZRCgKPEiaAYFaOegJzhFKQ3yGpb1ATRzb6A="}),p])])])])]),V])])}const b=a(d,[["render",y],["__file","IO.html.vue"]]);export{b as default};
