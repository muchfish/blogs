import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as i,f as e}from"./app-4c701cbd.js";const r={},t=e('<h2 id="java语言有哪些特点" tabindex="-1"><a class="header-anchor" href="#java语言有哪些特点" aria-hidden="true">#</a> Java语言有哪些特点？</h2><ul><li>面向对象 <ul><li>封装</li><li>继承</li><li>多态</li></ul></li><li>平台无关性</li><li>支持多线程</li><li>编译与解释并存</li></ul><h2 id="jvm、jdk-和-jre-有什么区别" tabindex="-1"><a class="header-anchor" href="#jvm、jdk-和-jre-有什么区别" aria-hidden="true">#</a> JVM、JDK 和 JRE 有什么区别？</h2><ul><li><p>JVM</p><ul><li>Java Virtual Machine，Java虚拟机，Java程序运行在Java虚拟机上。针对不同<br> 系统的实现（Windows，Linux，macOS）不同的JVM，因此Java语言可以实现跨平<br> 台。</li></ul></li><li><p>JRE</p><ul><li>Java 运⾏时环境。它是运⾏已编译 Java 程序所需的所有内容的集合，包括Java 虚拟机（JVM），Java 类库，Java 命令和其他的⼀些基础构件。但是，它不能⽤于创建新程序。</li></ul></li><li><p>JDK</p><ul><li>Java Development Kit，它是功能⻬全的 Java SDK。它拥有 JRE 所拥有的⼀<br> 切，还有编译器（javac）和⼯具（如 javadoc 和 jdb）。它能够创建和编译程序。<br> 简单来说，JDK包含JRE，JRE包含JVM。</li></ul></li></ul><h2 id="说说什么是跨平台性-原理是什么" tabindex="-1"><a class="header-anchor" href="#说说什么是跨平台性-原理是什么" aria-hidden="true">#</a> 说说什么是跨平台性？原理是什么?</h2><ul><li>跨平台：一次编译，多操作系统运行</li><li>实现原理：不同系统安装不同Java虚拟机</li></ul><h2 id="什么是字节码-采用字节码的好处是什么" tabindex="-1"><a class="header-anchor" href="#什么是字节码-采用字节码的好处是什么" aria-hidden="true">#</a> 什么是字节码？采用字节码的好处是什么?</h2><ul><li>.class文件</li><li>字节码能够被虚拟机识别，从而实现Java程序的跨平台性</li><li>Java 程序从源代码到运行主要有三步 <ul><li>编译：.java -&gt;.class</li><li>解释：虚拟机执行Java字节码，.class -机器码</li><li>执行 ：对应的操作系统执行二进制机器码</li></ul></li></ul><h2 id="为什么说-java-语言-编译与解释并存" tabindex="-1"><a class="header-anchor" href="#为什么说-java-语言-编译与解释并存" aria-hidden="true">#</a> 为什么说 Java 语言“编译与解释并存”？</h2><ul><li>因为 Java 程序要经过先编译，后解释两个步骤 <ul><li>由 Java 编写的程序需要先经过<strong>编译</strong>步骤，生成字节码（ *.class 文件）</li><li>这种字节码必须再经过JVM，<strong>解释</strong>成操作系统能识别的机器码，再由操作系统执行</li></ul></li></ul>',10),d=[t];function s(h,n){return l(),i("div",null,d)}const u=a(r,[["render",s],["__file","Java概述.html.vue"]]);export{u as default};
