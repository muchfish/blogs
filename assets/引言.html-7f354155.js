const e=JSON.parse('{"key":"v-1ea3b38e","path":"/Java/JVM/%E5%BC%95%E8%A8%80.html","title":"引言","lang":"zh-CN","frontmatter":{"title":"引言","order":1,"isTimeLine":true,"date":"2024-05-21T00:00:00.000Z","description":"什么是JVM? JVM，全称为Java虚拟机（Java Virtual Machine），是一个虚拟的计算机，它能够运行以字节码（bytecode）形式编写的Java程序。JVM是Java技术的核心部分，它使得Java具有跨平台特性，即“编写一次，运行在任何地方”（Write Once, Run Anywhere, WORA）。 JVM的主要功能 加载代码：JVM从文件系统中加载Java字节码文件（.class文件），并将其转换成可以执行的机器码。 内存管理：JVM负责分配和管理程序运行时所需的内存，包括堆（Heap）和栈（Stack）管理。 执行代码：JVM将字节码解释或编译成本地机器码，然后执行这些代码。 垃圾回收：JVM自动管理内存，通过垃圾回收机制回收不再使用的对象，防止内存泄漏。 安全性管理：JVM有一套安全管理机制，能够在执行代码前对其进行验证，确保代码不会进行非法操作。","head":[["meta",{"property":"og:url","content":"https://muchfish.github.io/blogs/blogs/Java/JVM/%E5%BC%95%E8%A8%80.html"}],["meta",{"property":"og:site_name","content":"鱼塘"}],["meta",{"property":"og:title","content":"引言"}],["meta",{"property":"og:description","content":"什么是JVM? JVM，全称为Java虚拟机（Java Virtual Machine），是一个虚拟的计算机，它能够运行以字节码（bytecode）形式编写的Java程序。JVM是Java技术的核心部分，它使得Java具有跨平台特性，即“编写一次，运行在任何地方”（Write Once, Run Anywhere, WORA）。 JVM的主要功能 加载代码：JVM从文件系统中加载Java字节码文件（.class文件），并将其转换成可以执行的机器码。 内存管理：JVM负责分配和管理程序运行时所需的内存，包括堆（Heap）和栈（Stack）管理。 执行代码：JVM将字节码解释或编译成本地机器码，然后执行这些代码。 垃圾回收：JVM自动管理内存，通过垃圾回收机制回收不再使用的对象，防止内存泄漏。 安全性管理：JVM有一套安全管理机制，能够在执行代码前对其进行验证，确保代码不会进行非法操作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-21T00:57:42.000Z"}],["meta",{"property":"article:author","content":"摸鱼散人"}],["meta",{"property":"article:published_time","content":"2024-05-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-21T00:57:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"引言\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-21T00:57:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"摸鱼散人\\",\\"url\\":\\"https://github.com/muchfish\\"}]}"]]},"headers":[{"level":2,"title":"什么是JVM?","slug":"什么是jvm","link":"#什么是jvm","children":[{"level":3,"title":"JVM的主要功能","slug":"jvm的主要功能","link":"#jvm的主要功能","children":[]},{"level":3,"title":"JVM的结构","slug":"jvm的结构","link":"#jvm的结构","children":[]},{"level":3,"title":"JVM的工作过程","slug":"jvm的工作过程","link":"#jvm的工作过程","children":[]},{"level":3,"title":"JVM的跨平台特性","slug":"jvm的跨平台特性","link":"#jvm的跨平台特性","children":[]}]}],"git":{"createdTime":1716253062000,"updatedTime":1716253062000,"contributors":[{"name":"daiwencheng","email":"1319105206@qq.com","commits":1}]},"readingTime":{"minutes":2.27,"words":681},"filePathRelative":"Java/JVM/引言.md","localizedDate":"2024年5月21日","excerpt":"<h2> 什么是JVM?</h2>\\n<p>JVM，全称为Java虚拟机（Java Virtual Machine），是一个虚拟的计算机，它能够运行以字节码（bytecode）形式编写的Java程序。JVM是Java技术的核心部分，它使得Java具有跨平台特性，即“编写一次，运行在任何地方”（Write Once, Run Anywhere, WORA）。</p>\\n<h3> JVM的主要功能</h3>\\n<ol>\\n<li>\\n<p><strong>加载代码</strong>：JVM从文件系统中加载Java字节码文件（.class文件），并将其转换成可以执行的机器码。</p>\\n</li>\\n<li>\\n<p><strong>内存管理</strong>：JVM负责分配和管理程序运行时所需的内存，包括堆（Heap）和栈（Stack）管理。</p>\\n</li>\\n<li>\\n<p><strong>执行代码</strong>：JVM将字节码解释或编译成本地机器码，然后执行这些代码。</p>\\n</li>\\n<li>\\n<p><strong>垃圾回收</strong>：JVM自动管理内存，通过垃圾回收机制回收不再使用的对象，防止内存泄漏。</p>\\n</li>\\n<li>\\n<p><strong>安全性管理</strong>：JVM有一套安全管理机制，能够在执行代码前对其进行验证，确保代码不会进行非法操作。</p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
