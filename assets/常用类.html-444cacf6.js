const t=JSON.parse('{"key":"v-c29799bc","path":"/JavaInterview/JavaBase/%E5%B8%B8%E7%94%A8%E7%B1%BB.html","title":"常用类","lang":"zh-CN","frontmatter":{"title":"常用类","order":5,"isTimeLine":true,"date":"2024-05-10T00:00:00.000Z","description":"String 是 Java 基本数据类型吗？可以被继承吗？ String是Java基本数据类型吗？ 不是，引用数据类型 String 类可以继承吗? 不行。String类在Java中被声明为final类，这意味着它不能被继承 这样设计的原因 字符串的不可变性 String类的不可变性使得它可以被安全地用于多线程环境下，不会出现线程安全问题 任何对 String 对象的操作（如拼接、替换等）都会返回一个新的 String 对象，而不会修改原始对象的值 字符串常量池的优化 由于字符串是不可变的，Java可以对字符串进行缓存和共享，以提高性能和节省内存 这就是通过字符串常量池来实现的，它存储了所有字符串字面量的唯一实例 安全性和可靠性 String类的不可变性使得它在安全性和可靠性方面更加可靠。例如，它可以被用作Map的键，因为它的哈希值是固定的","head":[["meta",{"property":"og:url","content":"https://muchfish.github.io/blogs/blogs/JavaInterview/JavaBase/%E5%B8%B8%E7%94%A8%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"鱼塘"}],["meta",{"property":"og:title","content":"常用类"}],["meta",{"property":"og:description","content":"String 是 Java 基本数据类型吗？可以被继承吗？ String是Java基本数据类型吗？ 不是，引用数据类型 String 类可以继承吗? 不行。String类在Java中被声明为final类，这意味着它不能被继承 这样设计的原因 字符串的不可变性 String类的不可变性使得它可以被安全地用于多线程环境下，不会出现线程安全问题 任何对 String 对象的操作（如拼接、替换等）都会返回一个新的 String 对象，而不会修改原始对象的值 字符串常量池的优化 由于字符串是不可变的，Java可以对字符串进行缓存和共享，以提高性能和节省内存 这就是通过字符串常量池来实现的，它存储了所有字符串字面量的唯一实例 安全性和可靠性 String类的不可变性使得它在安全性和可靠性方面更加可靠。例如，它可以被用作Map的键，因为它的哈希值是固定的"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-13T02:04:11.000Z"}],["meta",{"property":"article:author","content":"摸鱼散人"}],["meta",{"property":"article:published_time","content":"2024-05-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-13T02:04:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-13T02:04:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"摸鱼散人\\",\\"url\\":\\"https://github.com/muchfish\\"}]}"]]},"headers":[{"level":2,"title":"String 是 Java 基本数据类型吗？可以被继承吗？","slug":"string-是-java-基本数据类型吗-可以被继承吗","link":"#string-是-java-基本数据类型吗-可以被继承吗","children":[]},{"level":2,"title":"String和StringBuilder、StringBuffer？","slug":"string和stringbuilder、stringbuffer","link":"#string和stringbuilder、stringbuffer","children":[]},{"level":2,"title":"String str1 = new String(\\"abc\\")和String str2 = \\"abc\\" 和 区别？","slug":"string-str1-new-string-abc-和string-str2-abc-和-区别","link":"#string-str1-new-string-abc-和string-str2-abc-和-区别","children":[]},{"level":2,"title":"String不是不可变类吗？字符串拼接是如何实现的？","slug":"string不是不可变类吗-字符串拼接是如何实现的","link":"#string不是不可变类吗-字符串拼接是如何实现的","children":[]},{"level":2,"title":"intern方法有什么作用？","slug":"intern方法有什么作用","link":"#intern方法有什么作用","children":[]},{"level":2,"title":"Integer a= 127，Integer b = 127；Integer c= 128，Integer d =128；相等吗?","slug":"integer-a-127-integer-b-127-integer-c-128-integer-d-128-相等吗","link":"#integer-a-127-integer-b-127-integer-c-128-integer-d-128-相等吗","children":[]},{"level":2,"title":"String怎么转成Integer的？原理？","slug":"string怎么转成integer的-原理","link":"#string怎么转成integer的-原理","children":[]},{"level":2,"title":"Object 类的常见方法?","slug":"object-类的常见方法","link":"#object-类的常见方法","children":[]}],"git":{"createdTime":1715565851000,"updatedTime":1715565851000,"contributors":[{"name":"daiwencheng","email":"1319105206@qq.com","commits":1}]},"readingTime":{"minutes":5.33,"words":1599},"filePathRelative":"JavaInterview/JavaBase/常用类.md","localizedDate":"2024年5月10日","excerpt":"<h2> String 是 Java 基本数据类型吗？可以被继承吗？</h2>\\n<ul>\\n<li>\\n<p>String是Java基本数据类型吗？</p>\\n<ul>\\n<li>不是，引用数据类型</li>\\n</ul>\\n</li>\\n<li>\\n<p>String 类可以继承吗?</p>\\n<ul>\\n<li>不行。String类在Java中被声明为final类，这意味着它不能被继承</li>\\n</ul>\\n</li>\\n<li>\\n<p>这样设计的原因</p>\\n<ul>\\n<li>\\n<p>字符串的不可变性</p>\\n<ul>\\n<li>\\n<p>String类的不可变性使得它可以被安全地用于多线程环境下，不会出现线程安全问题</p>\\n<blockquote>\\n<p>任何对 <code>String</code> 对象的操作（如拼接、替换等）都会返回一个新的 <code>String</code> 对象，而不会修改原始对象的值</p>\\n</blockquote>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>字符串常量池的优化</p>\\n<ul>\\n<li>由于字符串是不可变的，Java可以对字符串进行缓存和共享，以提高性能和节省内存</li>\\n<li>这就是通过字符串常量池来实现的，它存储了所有字符串字面量的唯一实例</li>\\n</ul>\\n</li>\\n<li>\\n<p>安全性和可靠性</p>\\n<ul>\\n<li>String类的不可变性使得它在安全性和可靠性方面更加可靠。例如，它可以被用作Map的键，因为它的哈希值是固定的</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
