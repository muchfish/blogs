const t=JSON.parse('{"key":"v-cf008ebc","path":"/Java%E9%9D%A2%E8%AF%95/Java%E5%9F%BA%E7%A1%80/IO.html","title":"7.IO","lang":"zh-CN","frontmatter":{"title":"7.IO","isTimeLine":true,"date":"2024-05-12T00:00:00.000Z","description":"Java 中 IO 流分为几种? 按照流的流向分，可以分为 输入流 和 输出流 InputStream / Reader : 所有的输入流的基类，前者是字节输入流，后者是字符输入流 OutputStream / Writer : 所有输出流的基类，前者是字节输出流，后者是字符输出流 按照操作单元划分，可以划分为 字节流 和 字符流 按照流的角色划分为 节点流 和 处理流 既然有了字节流,为什么还要有字符流？ 字节流 字节流则更适合处理二进制数据 字节流以字节为单位进行输入输出，适用于处理二进制数据（例如图像、音频、视频等）或与底层设备进行通信时。字节流通常用于处理文件和网络连接中的数据传输。它们是处理数据的底层工具，提供了最基本的输入输出操作。 字符流 字符流更适合读取和写入文本文件 字符流以字符为单位进行输入输出，适用于处理文本数据。字符流会自动处理字符编码和解码，而字节流则需要手动处理。这使得字符流在处理文本数据时更方便和高效，尤其是当涉及到国际化和本地化时、 尽管字节流可以处理所有类型的数据，但为了更方便地处理文本数据，Java提供了字符流","head":[["meta",{"property":"og:url","content":"https://muchfish.github.io/blogs/blogs/Java%E9%9D%A2%E8%AF%95/Java%E5%9F%BA%E7%A1%80/IO.html"}],["meta",{"property":"og:site_name","content":"鱼塘"}],["meta",{"property":"og:title","content":"7.IO"}],["meta",{"property":"og:description","content":"Java 中 IO 流分为几种? 按照流的流向分，可以分为 输入流 和 输出流 InputStream / Reader : 所有的输入流的基类，前者是字节输入流，后者是字符输入流 OutputStream / Writer : 所有输出流的基类，前者是字节输出流，后者是字符输出流 按照操作单元划分，可以划分为 字节流 和 字符流 按照流的角色划分为 节点流 和 处理流 既然有了字节流,为什么还要有字符流？ 字节流 字节流则更适合处理二进制数据 字节流以字节为单位进行输入输出，适用于处理二进制数据（例如图像、音频、视频等）或与底层设备进行通信时。字节流通常用于处理文件和网络连接中的数据传输。它们是处理数据的底层工具，提供了最基本的输入输出操作。 字符流 字符流更适合读取和写入文本文件 字符流以字符为单位进行输入输出，适用于处理文本数据。字符流会自动处理字符编码和解码，而字节流则需要手动处理。这使得字符流在处理文本数据时更方便和高效，尤其是当涉及到国际化和本地化时、 尽管字节流可以处理所有类型的数据，但为了更方便地处理文本数据，Java提供了字符流"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-12T10:47:10.000Z"}],["meta",{"property":"article:author","content":"摸鱼散人"}],["meta",{"property":"article:published_time","content":"2024-05-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-12T10:47:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7.IO\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-12T10:47:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"摸鱼散人\\",\\"url\\":\\"https://github.com/muchfish\\"}]}"]]},"headers":[{"level":2,"title":"Java 中 IO 流分为几种?","slug":"java-中-io-流分为几种","link":"#java-中-io-流分为几种","children":[]},{"level":2,"title":"既然有了字节流,为什么还要有字符流？","slug":"既然有了字节流-为什么还要有字符流","link":"#既然有了字节流-为什么还要有字符流","children":[]},{"level":2,"title":"BIO、NIO、AIO？","slug":"bio、nio、aio","link":"#bio、nio、aio","children":[]}],"git":{"createdTime":1715508272000,"updatedTime":1715510830000,"contributors":[{"name":"daiwencheng","email":"1319105206@qq.com","commits":2}]},"readingTime":{"minutes":3.69,"words":1107},"filePathRelative":"Java面试/Java基础/IO.md","localizedDate":"2024年5月12日","excerpt":"<h2> Java 中 IO 流分为几种?</h2>\\n<ul>\\n<li>按照流的流向分，可以分为 输入流 和 输出流\\n<ul>\\n<li>InputStream / Reader : 所有的输入流的基类，前者是字节输入流，后者是字符输入流</li>\\n<li>OutputStream / Writer : 所有输出流的基类，前者是字节输出流，后者是字符输出流</li>\\n</ul>\\n</li>\\n<li>按照操作单元划分，可以划分为 字节流 和 字符流</li>\\n<li>按照流的角色划分为 节点流 和 处理流</li>\\n</ul>\\n<h2> 既然有了字节流,为什么还要有字符流？</h2>\\n<ul>\\n<li><strong>字节流</strong>\\n<ul>\\n<li>字节流则更适合处理二进制数据</li>\\n<li>字节流以字节为单位进行输入输出，适用于处理二进制数据（例如图像、音频、视频等）或与底层设备进行通信时。字节流通常用于处理文件和网络连接中的数据传输。它们是处理数据的底层工具，提供了最基本的输入输出操作。</li>\\n</ul>\\n</li>\\n<li><strong>字符流</strong>\\n<ul>\\n<li>字符流更适合读取和写入文本文件</li>\\n<li>字符流以字符为单位进行输入输出，适用于处理文本数据。字符流会自动处理字符编码和解码，而字节流则需要手动处理。这使得字符流在处理文本数据时更方便和高效，尤其是当涉及到国际化和本地化时、</li>\\n</ul>\\n</li>\\n<li>尽管字节流可以处理所有类型的数据，但为了更方便地处理文本数据，Java提供了字符流</li>\\n</ul>","autoDesc":true}');export{t as data};
