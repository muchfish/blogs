const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":61,\"nextId\":61,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e#关于网站\",\"2\":\"v-8daa1a0e#关于作者\",\"3\":\"v-8daa1a0e#占个位\",\"4\":\"v-8daa1a0e#star-趋势\",\"5\":\"v-184f4da6\",\"6\":\"v-2e3eac9e\",\"7\":\"v-4bc4557f\",\"8\":\"v-4bc4557f#三分钟搭建一个博客网站\",\"9\":\"v-4bc4557f#准备运行环境\",\"10\":\"v-4bc4557f#创建项目模板\",\"11\":\"v-4bc4557f#创建过程\",\"12\":\"v-4bc4557f#访问\",\"13\":\"v-4bc4557f#效果\",\"14\":\"v-4bc4557f#项目启动命令\",\"15\":\"v-4bc4557f#发布到github\",\"16\":\"v-4bc4557f#修改deploy-docs-yml\",\"17\":\"v-4bc4557f#修改config-ts\",\"18\":\"v-4bc4557f#共享项目到github\",\"19\":\"v-4bc4557f#从master新建分支gh-pages-推送新分支到github\",\"20\":\"v-4bc4557f#github上开源\",\"21\":\"v-4bc4557f#配置github-pages\",\"22\":\"v-4bc4557f#更新博客只在master分支上改-不要动gh-pages分支\",\"23\":\"v-4bc4557f#修复-编辑此页-功能链接跳转不对问题\",\"24\":\"v-4bc4557f#踩坑\",\"25\":\"v-4bc4557f@0\",\"26\":\"v-4bc4557f@1\",\"27\":\"v-17acbd64\",\"28\":\"v-17acbd64#java语言有哪些特点\",\"29\":\"v-17acbd64#jvm、jdk-和-jre-有什么区别\",\"30\":\"v-17acbd64#说说什么是跨平台性-原理是什么\",\"31\":\"v-17acbd64#什么是字节码-采用字节码的好处是什么\",\"32\":\"v-17acbd64#为什么说-java-语言-编译与解释并存\",\"33\":\"v-008eca2c\",\"34\":\"v-008eca2c#java有哪些数据类型\",\"35\":\"v-008eca2c#什么是自动类型转换、强制类型转换\",\"36\":\"v-008eca2c#什么是自动拆箱-封箱\",\"37\":\"v-008eca2c#和-有什么区别\",\"38\":\"v-008eca2c#switch-是否能作用在-byte-long-string上\",\"39\":\"v-008eca2c#break-continue-return-的区别及作用\",\"40\":\"v-008eca2c#用最有效率的方法计算2乘以8\",\"41\":\"v-008eca2c#说说自增自减运算\",\"42\":\"v-77e86e78\",\"43\":\"v-77e86e78#面向对象和面向过程的区别\",\"44\":\"v-77e86e78#面向对象有哪些特性\",\"45\":\"v-77e86e78#重载-overload-和重写-override-的区别\",\"46\":\"v-77e86e78#访问修饰符public、private、protected、以及不写-默认-时的-区别\",\"47\":\"v-77e86e78#this关键字有什么作用\",\"48\":\"v-77e86e78#抽象类-abstract-class-和接口-interface-有什么区别\",\"49\":\"v-77e86e78#成员变量与局部变量的区别有哪些\",\"50\":\"v-77e86e78#静态变量和实例变量的区别-静态方法、实例方法呢\",\"51\":\"v-77e86e78#final关键字有什么作用\",\"52\":\"v-77e86e78#final、finally、finalize的区别\",\"53\":\"v-77e86e78#和-equals-的区别\",\"54\":\"v-77e86e78#hashcode与-equals\",\"55\":\"v-77e86e78#java是值传递-还是引用传递\",\"56\":\"v-77e86e78#什么是深拷贝和浅拷贝\",\"57\":\"v-77e86e78#java-创建对象有哪几种方式\",\"58\":\"v-e1e3da16\",\"59\":\"v-4db5d768\",\"60\":\"v-1d7e8c2e\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,6],\"2\":[1,1],\"3\":[1,1],\"4\":[2,1],\"5\":[1],\"6\":[1],\"7\":[1],\"8\":[1,6],\"9\":[1,4],\"10\":[1,8],\"11\":[1,154],\"12\":[1,4],\"13\":[1],\"14\":[1,7],\"15\":[1],\"16\":[4,6],\"17\":[3,23],\"18\":[1],\"19\":[3],\"20\":[1,8],\"21\":[2,12],\"22\":[3,8],\"23\":[3,7],\"24\":[1,2],\"25\":[null,null,1],\"26\":[null,null,1],\"27\":[2],\"28\":[2,7],\"29\":[6,44],\"30\":[3,5],\"31\":[3,15],\"32\":[5,12],\"33\":[2],\"34\":[2,53],\"35\":[3,5],\"36\":[3,4],\"37\":[3,3],\"38\":[6,24],\"39\":[5,15],\"40\":[2,6],\"41\":[2,12],\"42\":[2],\"43\":[2,13],\"44\":[2,21],\"45\":[6,23],\"46\":[8,19],\"47\":[2,7],\"48\":[7,42],\"49\":[2,41],\"50\":[4,29],\"51\":[2],\"52\":[4],\"53\":[4],\"54\":[3],\"55\":[3],\"56\":[2],\"57\":[3],\"58\":[1],\"59\":[1],\"60\":[2]},\"averageFieldLength\":[2.4596721311475407,15.414548374565804,0.07407407407407407],\"storedFields\":{\"0\":{\"h\":\"鱼塘\"},\"1\":{\"h\":\"关于网站\",\"t\":[\"欢迎来到鱼塘\",\"传送门：GitHub | Gitee。\",\"项目介绍\"]},\"2\":{\"h\":\"关于作者\",\"t\":[\"关于作者\"]},\"3\":{\"h\":\"占个位\",\"t\":[\"占个位\"]},\"4\":{\"h\":\"Star 趋势\",\"t\":[\"Stars\"]},\"5\":{\"h\":\"主页\"},\"6\":{\"h\":\"幻灯片页\"},\"7\":{\"h\":\"三分钟搭建一个博客网站\"},\"8\":{\"h\":\"三分钟搭建一个博客网站\",\"t\":[\"基于vuepress-theme-hope 和 github pages搭建\"]},\"9\":{\"h\":\"准备运行环境\",\"t\":[\"安装nodejs 下载地址\",\"安装pnpm 参考资料\"]},\"10\":{\"h\":\"创建项目模板\",\"t\":[\"pnpm create vuepress-theme-hope my-docs \"]},\"11\":{\"h\":\"创建过程\",\"t\":[\"PowerShell 7.4.0 PS C:\\\\Users\\\\daiwencheng\\\\Documents\\\\BaiduSyncdisk\\\\ob\\\\ob\\\\blogs> pnpm create vuepress-theme-hope my-docs .../Local/pnpm/store/v3/tmp/dlx-7428 | +83 ++++++++ .../Local/pnpm/store/v3/tmp/dlx-7428 | Progress: resolved 83, reused 61, downloaded 22, added 83, done ? Select a language to display / 选择显示语言 简体中文 ? 选择包管理器 pnpm 生成 package.json... ? 设置应用名称 vuepress-theme-hope-template ? 设置应用版本号 2.0.0 ? 设置应用描述 A project of vuepress-theme-hope ? 设置协议 MIT ? 项目需要用到多语言么? No ? 是否需要一个自动部署文档到 GitHub Pages 的工作流？ Yes ? 你想要创建什么类型的项目？ blog 生成模板... ? 是否初始化 Git 仓库? Yes 安装依赖... 这可能需要数分钟，请耐心等待. 我们无法正确输出子进程的进度条，所以进程可能会看似未响应 WARN 2 deprecated subdependencies found: rollup-plugin-terser@7.0.2, sourcemap-codec@1.4.8 Packages: +606 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ Progress: resolved 639, reused 409, downloaded 197, added 606, done node_modules/.pnpm/esbuild@0.19.8/node_modules/esbuild: Running postinstall script, done in 825ms devDependencies: + @vuepress/client 2.0.0-rc.0 + vue 3.3.10 + vuepress 2.0.0-rc.0 + vuepress-theme-hope 2.0.0-rc.2 The dependency was already listed in devDependencies. If you want to make it a prod dependency, then move it manually. Done in 25.3s 模板已成功生成! ? 是否想要现在启动 Demo 查看? Yes 启动开发服务器... 启动成功后，请在浏览器输入给出的开发服务器地址(默认为 'localhost:8080') > vuepress-theme-hope-template@2.0.0 docs:dev C:\\\\Users\\\\daiwencheng\\\\Documents\\\\BaiduSyncdisk\\\\ob\\\\ob\\\\blogs\\\\my-docs > vuepress dev src vite v5.0.6 dev server running at: ➜ Local: http://localhost:8080/ ➜ Network: http://10.246.84.128:8080/ \"]},\"12\":{\"h\":\"访问\",\"t\":[\"打开http://localhost:8080/ 访问\"]},\"13\":{\"h\":\"效果\"},\"14\":{\"h\":\"项目启动命令\",\"t\":[\"需要先进入项目目录 my-docs\",\"npm run docs:dev \"]},\"15\":{\"h\":\"发布到github\"},\"16\":{\"h\":\"修改 deploy-docs.yml\",\"t\":[\"on: push: branches: # 确保这是你正在使用的分支名称 - master \"]},\"17\":{\"h\":\"修改 config.ts\",\"t\":[\"export default defineUserConfig({ base: \\\"/my-docs/\\\", lang: \\\"zh-CN\\\", title: \\\"博客演示\\\", description: \\\"vuepress-theme-hope 的博客演示\\\", theme, // Enable it with pwa // shouldPrefetch: false, }); \"]},\"18\":{\"h\":\"共享项目到GitHub\"},\"19\":{\"h\":\"从master新建分支gh-pages,推送新分支到github\"},\"20\":{\"h\":\"GitHub上开源\",\"t\":[\"打开仓库my-docs\",\"打开Settings\",\"底部设置Change visibility 为change to public\"]},\"21\":{\"h\":\"配置Github Pages\",\"t\":[\"打开仓库my-docs的Settings项,选中侧边栏pages,配置部署分支为gh-pages,点击save.\",\"在actions菜单栏中应该会触发自动发布,没有的话随便修改下master分支代码,就会触发自动发布\",\"发布完成后,此时pages页会显示访问域名,点击访问即可\"]},\"22\":{\"h\":\"更新博客只在master分支上改,不要动gh-pages分支\",\"t\":[\"master 是源码分支 gh-pages是发布分支 master的代码都是ts和一些markdown文件,需要build成html文件和js才行,即gh-pages\"]},\"23\":{\"h\":\"修复\\\"编辑此页\\\"功能链接跳转不对问题\",\"t\":[\"修改theme.ts\",\"docsBranch: 文档所在分支,默认值: \\\"main\\\"\"]},\"24\":{\"h\":\"踩坑\",\"t\":[\"踩了一些坑,可以看提交记录\"]},\"25\":{\"c\":[\"前端\"]},\"26\":{\"c\":[\"JavaScript\"]},\"27\":{\"h\":\"1.Java概述\"},\"28\":{\"h\":\"Java语言有哪些特点？\",\"t\":[\"面向对象 \",\"封装\",\"继承\",\"多态\",\"平台无关性\",\"支持多线程\",\"编译与解释并存\"]},\"29\":{\"h\":\"JVM、JDK 和 JRE 有什么区别？\",\"t\":[\"JVM\",\"Java Virtual Machine，Java虚拟机，Java程序运行在Java虚拟机上。针对不同 系统的实现（Windows，Linux，macOS）不同的JVM，因此Java语言可以实现跨平 台。\",\"JRE\",\"Java 运⾏时环境。它是运⾏已编译 Java 程序所需的所有内容的集合，包括Java 虚拟机（JVM），Java 类库，Java 命令和其他的⼀些基础构件。但是，它不能⽤于创建新程序。\",\"JDK\",\"Java Development Kit，它是功能⻬全的 Java SDK。它拥有 JRE 所拥有的⼀ 切，还有编译器（javac）和⼯具（如 javadoc 和 jdb）。它能够创建和编译程序。 简单来说，JDK包含JRE，JRE包含JVM。\"]},\"30\":{\"h\":\"说说什么是跨平台性？原理是什么?\",\"t\":[\"跨平台：一次编译，多操作系统运行\",\"实现原理：不同系统安装不同Java虚拟机\"]},\"31\":{\"h\":\"什么是字节码？采用字节码的好处是什么?\",\"t\":[\".class文件\",\"字节码能够被虚拟机识别，从而实现Java程序的跨平台性\",\"Java 程序从源代码到运行主要有三步 \",\"编译：.java ->.class\",\"解释：虚拟机执行Java字节码，.class -机器码\",\"执行 ：对应的操作系统执行二进制机器码\"]},\"32\":{\"h\":\"为什么说 Java 语言“编译与解释并存”？\",\"t\":[\"因为 Java 程序要经过先编译，后解释两个步骤 \",\"由 Java 编写的程序需要先经过编译步骤，生成字节码（ *.class 文件）\",\"这种字节码必须再经过JVM，解释成操作系统能识别的机器码，再由操作系统执行\"]},\"33\":{\"h\":\"2.基础语法\"},\"34\":{\"h\":\"Java有哪些数据类型？\",\"t\":[\"基本数据类型\",\"数值型 \",\"整数类型（byte、short、int、long）\",\"浮点类型（float、double）\",\"字符型（char）\",\"布尔型（boolean）\",\"基本类型\",\"位数\",\"字节\",\"默认值\",\"最小值\",\"最大值\",\"int\",\"32\",\"4\",\"0\",\"-2^31\",\"2^31-1\",\"short\",\"16\",\"2\",\"0\",\"-2^15\",\"2^15-1\",\"long\",\"64\",\"8\",\"0L\",\"-2^63\",\"2^63-1\",\"byte\",\"8\",\"1\",\"0\",\"-128\",\"127\",\"char\",\"16\",\"2\",\"'\\\\u0000'\",\"'\\\\u0000'\",\"'\\\\uffff'\",\"float\",\"32\",\"4\",\"0.0f\",\"1.4E-45\",\"3.4028235E38\",\"double\",\"64\",\"8\",\"0.0d\",\"4.9E-324\",\"1.7976931348623157E308\",\"boolean\",\"1\",\"false\",\"引用数据类型\",\"类（class）\",\"接口（interface）\",\"数组([])\"]},\"35\":{\"h\":\"什么是自动类型转换、强制类型转换？\",\"t\":[\"自动类型转换：把一个表数范围小的数值或变量直接赋给另一个数范围大的变量时\",\"强制类型转换：反之，需要强制转换\"]},\"36\":{\"h\":\"什么是自动拆箱/封箱？\",\"t\":[\"装箱 ：将基本类型用它们对应的引用类型包装起来\",\"拆箱 ：将包装类型转换为基本数据类型\"]},\"37\":{\"h\":\"&和&&有什么区别？\",\"t\":[\"&：短路与\",\"&&：逻辑与\"]},\"38\":{\"h\":\"switch 是否能作用在 byte/long/String上？\",\"t\":[\"Java5 以前 switch(expr)中，expr 只能是 byte、short、char、int\",\"从 Java 5 开始，Java 中引入了枚举类型， expr 也可以是 enum 类型\",\"从 Java 7 开始，expr还可以是字符串(String)，但是长整型(long)在目前所有的版本中都是不可以的\"]},\"39\":{\"h\":\"break ,continue ,return 的区别及作用？\",\"t\":[\"break 跳出整个循环，不再执行循环( 结束当前的循环体 )\",\"continue 跳出本次循环，继续执行下次循环( 结束正在执行的循环 进入下一个循环条件 )\",\"return 程序返回，不再执行下面的代码( 结束当前的方法 直接返回 )\"]},\"40\":{\"h\":\"用最有效率的方法计算2乘以8？\",\"t\":[\"2 << 3。位运算，数字的二进制位左移三位相当于乘以2的三次方。\"]},\"41\":{\"h\":\"说说自增自减运算？\",\"t\":[\"++和--运算符可以放在变量之前，也可以放在变量之后\",\"运算符放在变量之前时(前缀)，先自增/减，再赋值\",\"当运算符放在变量之后时(后缀)，先赋值，再自增/减\"]},\"42\":{\"h\":\"3.面向对象\"},\"43\":{\"h\":\"⾯向对象和⾯向过程的区别?\",\"t\":[\"⾯向过程\",\"面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候再一个一个的一次调用就可以。\",\"⾯向对象\",\"面向对象，把构成问题的事务分解成各个对象，而建立对象的目的也不是为了完成一个个步骤，而是为了描述某个事件在解决整个问题的过程所发生的行为。 目的是为了写出通用的代码，加强代码的重用，屏蔽差异性。\"]},\"44\":{\"h\":\"面向对象有哪些特性?\",\"t\":[\"封装 \",\"封装把⼀个对象的属性私有化，同时提供⼀些可以被外界访问的属性的⽅法\",\"继承 \",\"继承是使⽤已存在的类的定义作为基础创建新的类，新类的定义可以增加新的属性或新的方法，也可以继承父类的属性和方法。通过继承可以很方便地进行代码复用\",\"多态 \",\"所谓多态就是指程序中定义的引⽤变量所指向的具体类型和通过该引⽤变量发出的⽅法调⽤在编程时并不确定，⽽是在程序运⾏期间才确定\",\"即⼀个引⽤变量到底会指向哪个类的实例对象，该引⽤变量发出的⽅法调⽤到底是哪个类中实现的⽅法，必须在由程序运⾏期间才能决定\",\"在 Java 中有两种形式可以实现多态：继承（多个⼦类对同⼀⽅法的重写）和接⼝（实现接⼝并覆盖接⼝中同⼀⽅法）\"]},\"45\":{\"h\":\"重载（overload）和重写（override）的区别？\",\"t\":[\"方法重载和方法重写都是实现多态性的方式\",\"区别在于前者实现的是编译时的多态性，而后者实现的是运行时的多态性\",\"方法重载\",\"方法名相同，形参不同（参数个数、参数类型、参数顺序满足任一）则视为重载；\",\"与返回值和修饰符无关\",\"调用方法不同，与异常类型更没关系\",\"发生在同一个类中\",\"方法重写\",\"方法名相同，形参相同\",\"基本数据类型相同，若为引用数据类型则返回值为被重写方法的返回值或是其子类\",\"重写方法不能抛出范围更大的受控异常（父类不希望子类出现更多的异常）\",\"重写方法的访问权限可以更广（子类可以扩大方法的访问范围）\",\"发生在具有继承关系的父子类中\"]},\"46\":{\"h\":\"访问修饰符public、private、protected、以及不写（默认）时的 区别?\",\"t\":[\"default (即默认，什么也不写） \",\"在同一包内可见，不使用任何修饰符。可以修饰在类、接口、变量、方法。\",\"private \",\"在同一类内可见。可以修饰变量、方法。\",\"注意：不能修饰外部类\",\"public \",\"对所有类可见。可以修饰类、接口、变量、方法\",\"protected \",\"对同一包内的类和所有子类可见。可以修饰变量、方法。\",\"注意：不能修饰外部类\"]},\"47\":{\"h\":\"this关键字有什么作用？\",\"t\":[\"指向对象本身的一个指针\",\"this的用法在Java中大体可以分为3种 \",\"普通的直接引用，this相当于是指向当前对象本身\",\"形参与成员变量名字重名，用this来区分\",\"引用本类的构造函数\"]},\"48\":{\"h\":\"抽象类(abstract class)和接口(interface)有什么区别？\",\"t\":[\"方法实现 \",\"接口中的方法默认是公开的(public)，只能定义，不能实现。从JDK 8开始，接口中的方法可以有默认实现，而抽象类可以包含非抽象的方法 \",\"如果同时实现两个接口，并且接口中定义了相同的默认方法，则必须重写方法，否则会报错\",\"在JDK 8中，接口也可以定义静态方法，并且可以直接使用接口名调用 \",\"实现类和实例不能调用静态方法\",\"JDK 9允许在接口中定义私有方法\",\"变量 \",\"接口中只能包含静态(static)和常量(final)变量，不能有其他类型的变量。而抽象类中可以包含任意类型的变量\",\"实现 \",\"一个类可以实现多个接口，但只能继承一个抽象类。接口自身可以通过extends关键字扩展多个接口\",\"方法修饰符 \",\"接口中的方法默认修饰符是public，抽象方法可以有public、protected和default修饰符。抽象方法是为了被重写，所以不能使用private修饰符\",\"设计层面 \",\"抽象类是对类的抽象，是一种模板设计，而接口是对行为的抽象，是一种行为规范\"]},\"49\":{\"h\":\"成员变量与局部变量的区别有哪些？\",\"t\":[\"成员变量 = 实例变量 + 静态变量（类变量）\",\"语法形式 \",\"成员变量是在类中声明的变量，可以被public、private、static等修饰符所修饰\",\"成员变量包括实例变量和静态变量（类变量） \",\"实例变量是每个对象独有的，而静态变量是类共享的\",\"局部变量是在方法中或代码块中声明的变量，不能被访问控制修饰符及static所修饰\",\"存储方式 \",\"实例变量存储在堆内存中\",\"静态变量存储在方法区（元空间）的静态存储区，所有对象共享同一份静态变量的拷贝\",\"局部变量存在栈内存中，随着方法或代码块的执行而创建和销毁\",\"生存周期 \",\"静态变量在类被加载至数据区后，只有当程序结束时才会被销毁，它的生命周期与程序的生命周期相同。\",\"实例变量即对象变量，随对象的创建而生，随对象的销毁而销毁\",\"局部变量只在方法或代码块内有效，一旦超出这个范围就不再有效\",\"默认值 \",\"非final修饰的成员变量具有默认值，而局部变量没有默认值\",\"成员变量的默认值根据其类型而定，例如整型默认为0，布尔型默认为false，引用类型默认为null\",\"局部变量在使用前必须显式地进行初始化\"]},\"50\":{\"h\":\"静态变量和实例变量的区别？静态方法、实例方法呢？\",\"t\":[\"静态变量 \",\"是被 static 修饰符修饰的变量，也称为类变量，它属于类，不属于类的任何一个对象，一个类不管创建多少个对象，静态变量在内存中有且仅有一个副本\",\"实例变量 \",\"必须依存于某一实例，需要先创建对象然后通过对象才能访问到它。静态变量可以实现让多个对象共享内存\",\"静态方法 \",\"static修饰的方法，也被称为类方法\",\"在外部调⽤静态⽅法时，可以使⽤\\\"类名.⽅法名\\\"的⽅式，也可以使⽤\\\"对象名.⽅法名\\\"的⽅式\",\"静态方法里不能访问类的非静态成员变量和方法\",\"实例⽅法 \",\"依存于类的实例\",\"需要使用\\\"对象名.⽅法名\\\"的⽅式调用\",\"可以访问类的所有成员变量和方法\"]},\"51\":{\"h\":\"final关键字有什么作用？\"},\"52\":{\"h\":\"final、finally、finalize的区别？\"},\"53\":{\"h\":\"==和 equals 的区别？\"},\"54\":{\"h\":\"hashCode与 equals?\"},\"55\":{\"h\":\"Java是值传递，还是引用传递？\"},\"56\":{\"h\":\"什么是深拷贝和浅拷贝?\"},\"57\":{\"h\":\"Java 创建对象有哪几种方式？\"},\"58\":{\"h\":\"Posts\"},\"59\":{\"h\":\"Java基础\"},\"60\":{\"h\":\"Java Interview\"}},\"dirtCount\":0,\"index\":[[\"还是引用传递\",{\"0\":{\"55\":1}}],[\"还有编译器\",{\"1\":{\"29\":1}}],[\"依存于类的实例\",{\"1\":{\"50\":1}}],[\"⽅法名\",{\"1\":{\"50\":3}}],[\"必须依存于某一实例\",{\"1\":{\"50\":1}}],[\"必须在由程序运⾏期间才能决定\",{\"1\":{\"44\":1}}],[\"也被称为类方法\",{\"1\":{\"50\":1}}],[\"也称为类变量\",{\"1\":{\"50\":1}}],[\"也可以使⽤\",{\"1\":{\"50\":1}}],[\"也可以继承父类的属性和方法\",{\"1\":{\"44\":1}}],[\"也可以放在变量之后\",{\"1\":{\"41\":1}}],[\"也可以是\",{\"1\":{\"38\":1}}],[\"静态方法里不能访问类的非静态成员变量和方法\",{\"1\":{\"50\":1}}],[\"静态方法\",{\"0\":{\"50\":1},\"1\":{\"50\":1}}],[\"静态变量可以实现让多个对象共享内存\",{\"1\":{\"50\":1}}],[\"静态变量在内存中有且仅有一个副本\",{\"1\":{\"50\":1}}],[\"静态变量在类被加载至数据区后\",{\"1\":{\"49\":1}}],[\"静态变量和实例变量的区别\",{\"0\":{\"50\":1}}],[\"静态变量存储在方法区\",{\"1\":{\"49\":1}}],[\"静态变量\",{\"1\":{\"49\":1,\"50\":1}}],[\"例如整型默认为0\",{\"1\":{\"49\":1}}],[\"非final修饰的成员变量具有默认值\",{\"1\":{\"49\":1}}],[\"随对象的销毁而销毁\",{\"1\":{\"49\":1}}],[\"随对象的创建而生\",{\"1\":{\"49\":1}}],[\"随着方法或代码块的执行而创建和销毁\",{\"1\":{\"49\":1}}],[\"只有当程序结束时才会被销毁\",{\"1\":{\"49\":1}}],[\"只能定义\",{\"1\":{\"48\":1}}],[\"只能是\",{\"1\":{\"38\":1}}],[\"生存周期\",{\"1\":{\"49\":1}}],[\"生成字节码\",{\"1\":{\"32\":1}}],[\"生成模板\",{\"1\":{\"11\":1}}],[\"生成\",{\"1\":{\"11\":1}}],[\"局部变量在使用前必须显式地进行初始化\",{\"1\":{\"49\":1}}],[\"局部变量只在方法或代码块内有效\",{\"1\":{\"49\":1}}],[\"局部变量存在栈内存中\",{\"1\":{\"49\":1}}],[\"局部变量是在方法中或代码块中声明的变量\",{\"1\":{\"49\":1}}],[\"元空间\",{\"1\":{\"49\":1}}],[\"存储方式\",{\"1\":{\"49\":1}}],[\"语法形式\",{\"1\":{\"49\":1}}],[\"语言\",{\"0\":{\"32\":1}}],[\"实例⽅法\",{\"1\":{\"50\":1}}],[\"实例方法呢\",{\"0\":{\"50\":1}}],[\"实例变量即对象变量\",{\"1\":{\"49\":1}}],[\"实例变量存储在堆内存中\",{\"1\":{\"49\":1}}],[\"实例变量是每个对象独有的\",{\"1\":{\"49\":1}}],[\"实例变量\",{\"1\":{\"49\":1,\"50\":1}}],[\"实现\",{\"1\":{\"48\":1}}],[\"实现类和实例不能调用静态方法\",{\"1\":{\"48\":1}}],[\"实现接⼝并覆盖接⼝中同⼀⽅法\",{\"1\":{\"44\":1}}],[\"实现原理\",{\"1\":{\"30\":1}}],[\"==和\",{\"0\":{\"53\":1}}],[\"=\",{\"1\":{\"49\":1}}],[\"成员变量的默认值根据其类型而定\",{\"1\":{\"49\":1}}],[\"成员变量包括实例变量和静态变量\",{\"1\":{\"49\":1}}],[\"成员变量是在类中声明的变量\",{\"1\":{\"49\":1}}],[\"成员变量\",{\"1\":{\"49\":1}}],[\"成员变量与局部变量的区别有哪些\",{\"0\":{\"49\":1}}],[\"设计层面\",{\"1\":{\"48\":1}}],[\"设置协议\",{\"1\":{\"11\":1}}],[\"设置应用描述\",{\"1\":{\"11\":1}}],[\"设置应用版本号\",{\"1\":{\"11\":1}}],[\"设置应用名称\",{\"1\":{\"11\":1}}],[\"抽象方法是为了被重写\",{\"1\":{\"48\":1}}],[\"抽象方法可以有public\",{\"1\":{\"48\":1}}],[\"抽象类是对类的抽象\",{\"1\":{\"48\":1}}],[\"抽象类\",{\"0\":{\"48\":1}}],[\"但只能继承一个抽象类\",{\"1\":{\"48\":1}}],[\"但是长整型\",{\"1\":{\"38\":1}}],[\"但是\",{\"1\":{\"29\":1}}],[\"一个类不管创建多少个对象\",{\"1\":{\"50\":1}}],[\"一个类可以实现多个接口\",{\"1\":{\"48\":1}}],[\"一旦超出这个范围就不再有效\",{\"1\":{\"49\":1}}],[\"一次编译\",{\"1\":{\"30\":1}}],[\"9允许在接口中定义私有方法\",{\"1\":{\"48\":1}}],[\"9e\",{\"1\":{\"34\":1}}],[\"并且可以直接使用接口名调用\",{\"1\":{\"48\":1}}],[\"并且接口中定义了相同的默认方法\",{\"1\":{\"48\":1}}],[\"否则会报错\",{\"1\":{\"48\":1}}],[\"则必须重写方法\",{\"1\":{\"48\":1}}],[\"则视为重载\",{\"1\":{\"45\":1}}],[\"引用类型默认为null\",{\"1\":{\"49\":1}}],[\"引用本类的构造函数\",{\"1\":{\"47\":1}}],[\"引用数据类型\",{\"1\":{\"34\":1}}],[\"用this来区分\",{\"1\":{\"47\":1}}],[\"用最有效率的方法计算2乘以8\",{\"0\":{\"40\":1}}],[\"普通的直接引用\",{\"1\":{\"47\":1}}],[\"指向对象本身的一个指针\",{\"1\":{\"47\":1}}],[\"对象名\",{\"1\":{\"50\":2}}],[\"对同一包内的类和所有子类可见\",{\"1\":{\"46\":1}}],[\"对所有类可见\",{\"1\":{\"46\":1}}],[\"对应的操作系统执行二进制机器码\",{\"1\":{\"31\":1}}],[\"注意\",{\"1\":{\"46\":2}}],[\"变量\",{\"1\":{\"46\":2,\"48\":2}}],[\"可以访问类的所有成员变量和方法\",{\"1\":{\"50\":1}}],[\"可以使⽤\",{\"1\":{\"50\":1}}],[\"可以被public\",{\"1\":{\"49\":1}}],[\"可以修饰类\",{\"1\":{\"46\":1}}],[\"可以修饰变量\",{\"1\":{\"46\":2}}],[\"可以修饰在类\",{\"1\":{\"46\":1}}],[\"可以看提交记录\",{\"1\":{\"24\":1}}],[\"什么也不写\",{\"1\":{\"46\":1}}],[\"什么是深拷贝和浅拷贝\",{\"0\":{\"56\":1}}],[\"什么是自动拆箱\",{\"0\":{\"36\":1}}],[\"什么是自动类型转换\",{\"0\":{\"35\":1}}],[\"什么是字节码\",{\"0\":{\"31\":1}}],[\"区别\",{\"0\":{\"46\":1}}],[\"区别在于前者实现的是编译时的多态性\",{\"1\":{\"45\":1}}],[\"时的\",{\"0\":{\"46\":1}}],[\"以及不写\",{\"0\":{\"46\":1}}],[\"以前\",{\"1\":{\"38\":1}}],[\"子类可以扩大方法的访问范围\",{\"1\":{\"45\":1}}],[\"父类不希望子类出现更多的异常\",{\"1\":{\"45\":1}}],[\"重写方法的访问权限可以更广\",{\"1\":{\"45\":1}}],[\"重写方法不能抛出范围更大的受控异常\",{\"1\":{\"45\":1}}],[\"重载\",{\"0\":{\"45\":1}}],[\"若为引用数据类型则返回值为被重写方法的返回值或是其子类\",{\"1\":{\"45\":1}}],[\"形参与成员变量名字重名\",{\"1\":{\"47\":1}}],[\"形参相同\",{\"1\":{\"45\":1}}],[\"形参不同\",{\"1\":{\"45\":1}}],[\"发生在具有继承关系的父子类中\",{\"1\":{\"45\":1}}],[\"发生在同一个类中\",{\"1\":{\"45\":1}}],[\"发布完成后\",{\"1\":{\"21\":1}}],[\"发布到github\",{\"0\":{\"15\":1}}],[\"与异常类型更没关系\",{\"1\":{\"45\":1}}],[\"与返回值和修饰符无关\",{\"1\":{\"45\":1}}],[\"调用方法不同\",{\"1\":{\"45\":1}}],[\"参数顺序满足任一\",{\"1\":{\"45\":1}}],[\"参数类型\",{\"1\":{\"45\":1}}],[\"参数个数\",{\"1\":{\"45\":1}}],[\"参考资料\",{\"1\":{\"9\":1}}],[\"方法修饰符\",{\"1\":{\"48\":1}}],[\"方法实现\",{\"1\":{\"48\":1}}],[\"方法\",{\"1\":{\"46\":4}}],[\"方法重写\",{\"1\":{\"45\":1}}],[\"方法重载\",{\"1\":{\"45\":1}}],[\"方法重载和方法重写都是实现多态性的方式\",{\"1\":{\"45\":1}}],[\"方法名相同\",{\"1\":{\"45\":2}}],[\"该引⽤变量发出的⽅法调⽤到底是哪个类中实现的⽅法\",{\"1\":{\"44\":1}}],[\"即默认\",{\"1\":{\"46\":1}}],[\"即⼀个引⽤变量到底会指向哪个类的实例对象\",{\"1\":{\"44\":1}}],[\"即gh\",{\"1\":{\"22\":1}}],[\"⽽是在程序运⾏期间才确定\",{\"1\":{\"44\":1}}],[\"通过继承可以很方便地进行代码复用\",{\"1\":{\"44\":1}}],[\"新类的定义可以增加新的属性或新的方法\",{\"1\":{\"44\":1}}],[\"同时提供⼀些可以被外界访问的属性的⽅法\",{\"1\":{\"44\":1}}],[\"屏蔽差异性\",{\"1\":{\"43\":1}}],[\"加强代码的重用\",{\"1\":{\"43\":1}}],[\"目的是为了写出通用的代码\",{\"1\":{\"43\":1}}],[\"而局部变量没有默认值\",{\"1\":{\"49\":1}}],[\"而静态变量是类共享的\",{\"1\":{\"49\":1}}],[\"而接口是对行为的抽象\",{\"1\":{\"48\":1}}],[\"而抽象类中可以包含任意类型的变量\",{\"1\":{\"48\":1}}],[\"而抽象类可以包含非抽象的方法\",{\"1\":{\"48\":1}}],[\"而后者实现的是运行时的多态性\",{\"1\":{\"45\":1}}],[\"而是为了描述某个事件在解决整个问题的过程所发生的行为\",{\"1\":{\"43\":1}}],[\"而建立对象的目的也不是为了完成一个个步骤\",{\"1\":{\"43\":1}}],[\"把构成问题的事务分解成各个对象\",{\"1\":{\"43\":1}}],[\"把一个表数范围小的数值或变量直接赋给另一个数范围大的变量时\",{\"1\":{\"35\":1}}],[\"使用的时候再一个一个的一次调用就可以\",{\"1\":{\"43\":1}}],[\"然后用函数把这些步骤一步一步实现\",{\"1\":{\"43\":1}}],[\"面向过程就是分析出解决问题所需要的步骤\",{\"1\":{\"43\":1}}],[\"面向对象有哪些特性\",{\"0\":{\"44\":1}}],[\"面向对象\",{\"0\":{\"42\":1},\"1\":{\"28\":1,\"43\":1}}],[\"⾯向对象\",{\"1\":{\"43\":1}}],[\"⾯向对象和⾯向过程的区别\",{\"0\":{\"43\":1}}],[\"⾯向过程\",{\"1\":{\"43\":1}}],[\"先赋值\",{\"1\":{\"41\":1}}],[\"先自增\",{\"1\":{\"41\":1}}],[\"后缀\",{\"1\":{\"41\":1}}],[\"后解释两个步骤\",{\"1\":{\"32\":1}}],[\"当运算符放在变量之后时\",{\"1\":{\"41\":1}}],[\"再自增\",{\"1\":{\"41\":1}}],[\"再赋值\",{\"1\":{\"41\":1}}],[\"再由操作系统执行\",{\"1\":{\"32\":1}}],[\"减\",{\"1\":{\"41\":2}}],[\"前缀\",{\"1\":{\"41\":1}}],[\"前端\",{\"2\":{\"25\":1}}],[\"运算符放在变量之前时\",{\"1\":{\"41\":1}}],[\"运算符可以放在变量之前\",{\"1\":{\"41\":1}}],[\"运⾏时环境\",{\"1\":{\"29\":1}}],[\"说说自增自减运算\",{\"0\":{\"41\":1}}],[\"说说什么是跨平台性\",{\"0\":{\"30\":1}}],[\"位运算\",{\"1\":{\"40\":1}}],[\"位数\",{\"1\":{\"34\":1}}],[\"<<\",{\"1\":{\"40\":1}}],[\"直接返回\",{\"1\":{\"39\":1}}],[\"进入下一个循环条件\",{\"1\":{\"39\":1}}],[\"结束当前的方法\",{\"1\":{\"39\":1}}],[\"结束当前的循环体\",{\"1\":{\"39\":1}}],[\"结束正在执行的循环\",{\"1\":{\"39\":1}}],[\"继续执行下次循环\",{\"1\":{\"39\":1}}],[\"继承是使⽤已存在的类的定义作为基础创建新的类\",{\"1\":{\"44\":1}}],[\"继承\",{\"1\":{\"28\":1,\"44\":2}}],[\"跳出本次循环\",{\"1\":{\"39\":1}}],[\"跳出整个循环\",{\"1\":{\"39\":1}}],[\"在外部调⽤静态⽅法时\",{\"1\":{\"50\":1}}],[\"在jdk\",{\"1\":{\"48\":1}}],[\"在同一类内可见\",{\"1\":{\"46\":1}}],[\"在同一包内可见\",{\"1\":{\"46\":1}}],[\"在\",{\"1\":{\"44\":1}}],[\"在目前所有的版本中都是不可以的\",{\"1\":{\"38\":1}}],[\"在actions菜单栏中应该会触发自动发布\",{\"1\":{\"21\":1}}],[\"开始\",{\"1\":{\"38\":2}}],[\"5\",{\"1\":{\"38\":1}}],[\"中有两种形式可以实现多态\",{\"1\":{\"44\":1}}],[\"中引入了枚举类型\",{\"1\":{\"38\":1}}],[\"中\",{\"1\":{\"38\":1}}],[\"逻辑与\",{\"1\":{\"37\":1}}],[\"短路与\",{\"1\":{\"37\":1}}],[\"将包装类型转换为基本数据类型\",{\"1\":{\"36\":1}}],[\"将基本类型用它们对应的引用类型包装起来\",{\"1\":{\"36\":1}}],[\"拆箱\",{\"1\":{\"36\":1}}],[\"装箱\",{\"1\":{\"36\":1}}],[\"封箱\",{\"0\":{\"36\":1}}],[\"封装把⼀个对象的属性私有化\",{\"1\":{\"44\":1}}],[\"封装\",{\"1\":{\"28\":1,\"44\":1}}],[\"反之\",{\"1\":{\"35\":1}}],[\"自动类型转换\",{\"1\":{\"35\":1}}],[\"强制类型转换\",{\"0\":{\"35\":1},\"1\":{\"35\":1}}],[\"数字的二进制位左移三位相当于乘以2的三次方\",{\"1\":{\"40\":1}}],[\"数组\",{\"1\":{\"34\":1}}],[\"数值型\",{\"1\":{\"34\":1}}],[\"接口自身可以通过extends关键字扩展多个接口\",{\"1\":{\"48\":1}}],[\"接口中只能包含静态\",{\"1\":{\"48\":1}}],[\"接口中的方法默认修饰符是public\",{\"1\":{\"48\":1}}],[\"接口中的方法默认是公开的\",{\"1\":{\"48\":1}}],[\"接口中的方法可以有默认实现\",{\"1\":{\"48\":1}}],[\"接口也可以定义静态方法\",{\"1\":{\"48\":1}}],[\"接口\",{\"1\":{\"34\":1,\"46\":2}}],[\"类名\",{\"1\":{\"50\":1}}],[\"类变量\",{\"1\":{\"49\":2}}],[\"类型\",{\"1\":{\"38\":1}}],[\"类\",{\"1\":{\"34\":1}}],[\"类库\",{\"1\":{\"29\":1}}],[\"uffff\",{\"1\":{\"34\":1}}],[\"u0000\",{\"1\":{\"34\":2}}],[\"users\",{\"1\":{\"11\":2}}],[\"最大值\",{\"1\":{\"34\":1}}],[\"最小值\",{\"1\":{\"34\":1}}],[\"布尔型默认为false\",{\"1\":{\"49\":1}}],[\"布尔型\",{\"1\":{\"34\":1}}],[\"字节\",{\"1\":{\"34\":1}}],[\"字节码能够被虚拟机识别\",{\"1\":{\"31\":1}}],[\"字符型\",{\"1\":{\"34\":1}}],[\"浮点类型\",{\"1\":{\"34\":1}}],[\"整数类型\",{\"1\":{\"34\":1}}],[\"基本类型\",{\"1\":{\"34\":1}}],[\"基本数据类型相同\",{\"1\":{\"45\":1}}],[\"基本数据类型\",{\"1\":{\"34\":1}}],[\"基础语法\",{\"0\":{\"33\":1}}],[\"基于vuepress\",{\"1\":{\"8\":1}}],[\"这种字节码必须再经过jvm\",{\"1\":{\"32\":1}}],[\"这可能需要数分钟\",{\"1\":{\"11\":1}}],[\"文件\",{\"1\":{\"32\":1}}],[\"文档所在分支\",{\"1\":{\"23\":1}}],[\"由\",{\"1\":{\"32\":1}}],[\"因为\",{\"1\":{\"32\":1}}],[\"因此java语言可以实现跨平\",{\"1\":{\"29\":1}}],[\"为什么说\",{\"0\":{\"32\":1}}],[\"为change\",{\"1\":{\"20\":1}}],[\"执行\",{\"1\":{\"31\":1}}],[\"机器码\",{\"1\":{\"31\":1}}],[\"解释成操作系统能识别的机器码\",{\"1\":{\"32\":1}}],[\"解释\",{\"1\":{\"31\":1}}],[\"程序返回\",{\"1\":{\"39\":1}}],[\"程序要经过先编译\",{\"1\":{\"32\":1}}],[\"程序从源代码到运行主要有三步\",{\"1\":{\"31\":1}}],[\"程序所需的所有内容的集合\",{\"1\":{\"29\":1}}],[\"从jdk\",{\"1\":{\"48\":1}}],[\"从\",{\"1\":{\"38\":2}}],[\"从而实现java程序的跨平台性\",{\"1\":{\"31\":1}}],[\"从master新建分支gh\",{\"0\":{\"19\":1}}],[\"采用字节码的好处是什么\",{\"0\":{\"31\":1}}],[\"多个⼦类对同⼀⽅法的重写\",{\"1\":{\"44\":1}}],[\"多操作系统运行\",{\"1\":{\"30\":1}}],[\"多态\",{\"1\":{\"28\":1,\"44\":1}}],[\"跨平台\",{\"1\":{\"30\":1}}],[\"原理是什么\",{\"0\":{\"30\":1}}],[\"简单来说\",{\"1\":{\"29\":1}}],[\"简体中文\",{\"1\":{\"11\":1}}],[\"如果同时实现两个接口\",{\"1\":{\"48\":1}}],[\"如\",{\"1\":{\"29\":1}}],[\"切\",{\"1\":{\"29\":1}}],[\"所有对象共享同一份静态变量的拷贝\",{\"1\":{\"49\":1}}],[\"所以不能使用private修饰符\",{\"1\":{\"48\":1}}],[\"所以进程可能会看似未响应\",{\"1\":{\"11\":1}}],[\"所谓多态就是指程序中定义的引⽤变量所指向的具体类型和通过该引⽤变量发出的⽅法调⽤在编程时并不确定\",{\"1\":{\"44\":1}}],[\"所拥有的⼀\",{\"1\":{\"29\":1}}],[\"kit\",{\"1\":{\"29\":1}}],[\"它属于类\",{\"1\":{\"50\":1}}],[\"它的生命周期与程序的生命周期相同\",{\"1\":{\"49\":1}}],[\"它能够创建和编译程序\",{\"1\":{\"29\":1}}],[\"它拥有\",{\"1\":{\"29\":1}}],[\"它是功能⻬全的\",{\"1\":{\"29\":1}}],[\"它是运⾏已编译\",{\"1\":{\"29\":1}}],[\"它不能⽤于创建新程序\",{\"1\":{\"29\":1}}],[\"命令和其他的⼀些基础构件\",{\"1\":{\"29\":1}}],[\"虚拟机执行java字节码\",{\"1\":{\"31\":1}}],[\"虚拟机\",{\"1\":{\"29\":1}}],[\"包括java\",{\"1\":{\"29\":1}}],[\"台\",{\"1\":{\"29\":1}}],[\"不属于类的任何一个对象\",{\"1\":{\"50\":1}}],[\"不能被访问控制修饰符及static所修饰\",{\"1\":{\"49\":1}}],[\"不能有其他类型的变量\",{\"1\":{\"48\":1}}],[\"不能实现\",{\"1\":{\"48\":1}}],[\"不能修饰外部类\",{\"1\":{\"46\":2}}],[\"不使用任何修饰符\",{\"1\":{\"46\":1}}],[\"不再执行下面的代码\",{\"1\":{\"39\":1}}],[\"不再执行循环\",{\"1\":{\"39\":1}}],[\"不同系统安装不同java虚拟机\",{\"1\":{\"30\":1}}],[\"不同的jvm\",{\"1\":{\"29\":1}}],[\"不要动gh\",{\"0\":{\"22\":1}}],[\"系统的实现\",{\"1\":{\"29\":1}}],[\"针对不同\",{\"1\":{\"29\":1}}],[\"有什么区别\",{\"0\":{\"29\":1,\"37\":1,\"48\":1}}],[\"编写的程序需要先经过编译步骤\",{\"1\":{\"32\":1}}],[\"编译\",{\"1\":{\"31\":1}}],[\"编译与解释并存\",{\"0\":{\"32\":1},\"1\":{\"28\":1}}],[\"编辑此页\",{\"0\":{\"23\":1}}],[\"支持多线程\",{\"1\":{\"28\":1}}],[\"平台无关性\",{\"1\":{\"28\":1}}],[\"jdb\",{\"1\":{\"29\":1}}],[\"jdk包含jre\",{\"1\":{\"29\":1}}],[\"jdk\",{\"0\":{\"29\":1},\"1\":{\"29\":1,\"48\":1}}],[\"jre包含jvm\",{\"1\":{\"29\":1}}],[\"jre\",{\"0\":{\"29\":1},\"1\":{\"29\":2}}],[\"jvm\",{\"0\":{\"29\":1},\"1\":{\"29\":2}}],[\"java基础\",{\"0\":{\"59\":1}}],[\"java是值传递\",{\"0\":{\"55\":1}}],[\"java5\",{\"1\":{\"38\":1}}],[\"java有哪些数据类型\",{\"0\":{\"34\":1}}],[\"javadoc\",{\"1\":{\"29\":1}}],[\"javac\",{\"1\":{\"29\":1}}],[\"java程序运行在java虚拟机上\",{\"1\":{\"29\":1}}],[\"java虚拟机\",{\"1\":{\"29\":1}}],[\"java\",{\"0\":{\"32\":1,\"57\":1,\"60\":1},\"1\":{\"29\":7,\"31\":2,\"32\":2,\"38\":3,\"44\":1}}],[\"java语言有哪些特点\",{\"0\":{\"28\":1}}],[\"java概述\",{\"0\":{\"27\":1}}],[\"javascript\",{\"2\":{\"26\":1}}],[\"json\",{\"1\":{\"11\":1}}],[\"踩了一些坑\",{\"1\":{\"24\":1}}],[\"踩坑\",{\"0\":{\"24\":1}}],[\"默认\",{\"0\":{\"46\":1}}],[\"默认值\",{\"1\":{\"23\":1,\"34\":1,\"49\":1}}],[\"默认为\",{\"1\":{\"11\":1}}],[\"功能链接跳转不对问题\",{\"0\":{\"23\":1}}],[\"修饰符修饰的变量\",{\"1\":{\"50\":1}}],[\"修复\",{\"0\":{\"23\":1}}],[\"修改theme\",{\"1\":{\"23\":1}}],[\"修改\",{\"0\":{\"16\":1,\"17\":1}}],[\"需要使用\",{\"1\":{\"50\":1}}],[\"需要先创建对象然后通过对象才能访问到它\",{\"1\":{\"50\":1}}],[\"需要先进入项目目录\",{\"1\":{\"14\":1}}],[\"需要强制转换\",{\"1\":{\"35\":1}}],[\"需要build成html文件和js才行\",{\"1\":{\"22\":1}}],[\"gh\",{\"1\":{\"22\":1}}],[\"git\",{\"1\":{\"11\":1}}],[\"gitee\",{\"1\":{\"1\":1}}],[\"github上开源\",{\"0\":{\"20\":1}}],[\"github\",{\"1\":{\"1\":1,\"8\":1,\"11\":1}}],[\"是被\",{\"1\":{\"50\":1}}],[\"是一种行为规范\",{\"1\":{\"48\":1}}],[\"是一种模板设计\",{\"1\":{\"48\":1}}],[\"是源码分支\",{\"1\":{\"22\":1}}],[\"是否能作用在\",{\"0\":{\"38\":1}}],[\"是否想要现在启动\",{\"1\":{\"11\":1}}],[\"是否初始化\",{\"1\":{\"11\":1}}],[\"是否需要一个自动部署文档到\",{\"1\":{\"11\":1}}],[\"更新博客只在master分支上改\",{\"0\":{\"22\":1}}],[\"点击访问即可\",{\"1\":{\"21\":1}}],[\"点击save\",{\"1\":{\"21\":1}}],[\"此时pages页会显示访问域名\",{\"1\":{\"21\":1}}],[\"就会触发自动发布\",{\"1\":{\"21\":1}}],[\"没有的话随便修改下master分支代码\",{\"1\":{\"21\":1}}],[\"配置部署分支为gh\",{\"1\":{\"21\":1}}],[\"配置github\",{\"0\":{\"21\":1}}],[\"选中侧边栏pages\",{\"1\":{\"21\":1}}],[\"选择包管理器\",{\"1\":{\"11\":1}}],[\"选择显示语言\",{\"1\":{\"11\":1}}],[\"底部设置change\",{\"1\":{\"20\":1}}],[\"打开settings\",{\"1\":{\"20\":1}}],[\"打开仓库my\",{\"1\":{\"20\":1,\"21\":1}}],[\"打开http\",{\"1\":{\"12\":1}}],[\"推送新分支到github\",{\"0\":{\"19\":1}}],[\"共享项目到github\",{\"0\":{\"18\":1}}],[\"finalize的区别\",{\"0\":{\"52\":1}}],[\"finally\",{\"0\":{\"52\":1}}],[\"final关键字有什么作用\",{\"0\":{\"51\":1}}],[\"final\",{\"0\":{\"52\":1},\"1\":{\"48\":1}}],[\"float\",{\"1\":{\"34\":2}}],[\"false\",{\"1\":{\"17\":1,\"34\":1}}],[\"found\",{\"1\":{\"11\":1}}],[\"windows\",{\"1\":{\"29\":1}}],[\"with\",{\"1\":{\"17\":1}}],[\"want\",{\"1\":{\"11\":1}}],[\"was\",{\"1\":{\"11\":1}}],[\"warn\",{\"1\":{\"11\":1}}],[\"的⽅式调用\",{\"1\":{\"50\":1}}],[\"的⽅式\",{\"1\":{\"50\":2}}],[\"的静态存储区\",{\"1\":{\"49\":1}}],[\"的区别\",{\"0\":{\"45\":1,\"53\":1}}],[\"的区别及作用\",{\"0\":{\"39\":1}}],[\"的博客演示\",{\"1\":{\"17\":1}}],[\"的工作流\",{\"1\":{\"11\":1}}],[\"博客演示\",{\"1\":{\"17\":1}}],[\"zh\",{\"1\":{\"17\":1}}],[\"equals\",{\"0\":{\"53\":1,\"54\":1}}],[\"enum\",{\"1\":{\"38\":1}}],[\"enable\",{\"1\":{\"17\":1}}],[\"expr还可以是字符串\",{\"1\":{\"38\":1}}],[\"expr\",{\"1\":{\"38\":3}}],[\"export\",{\"1\":{\"17\":1}}],[\"esbuild\",{\"1\":{\"11\":2}}],[\"确保这是你正在使用的分支名称\",{\"1\":{\"16\":1}}],[\"效果\",{\"0\":{\"13\":1}}],[\"访问修饰符public\",{\"0\":{\"46\":1}}],[\"访问\",{\"0\":{\"12\":1},\"1\":{\"12\":1}}],[\"npm\",{\"1\":{\"14\":1}}],[\"network\",{\"1\":{\"11\":1}}],[\"node\",{\"1\":{\"11\":2}}],[\"no\",{\"1\":{\"11\":1}}],[\"hashcode与\",{\"0\":{\"54\":1}}],[\"http\",{\"1\":{\"11\":2}}],[\"hope\",{\"1\":{\"8\":1,\"10\":1,\"11\":5,\"17\":1}}],[\"➜\",{\"1\":{\"11\":2}}],[\">\",{\"1\":{\"11\":2,\"31\":1}}],[\"请在浏览器输入给出的开发服务器地址\",{\"1\":{\"11\":1}}],[\"请耐心等待\",{\"1\":{\"11\":1}}],[\"启动成功后\",{\"1\":{\"11\":1}}],[\"启动开发服务器\",{\"1\":{\"11\":1}}],[\"查看\",{\"1\":{\"11\":1}}],[\"模板已成功生成\",{\"1\":{\"11\":1}}],[\"yml\",{\"0\":{\"16\":1}}],[\"you\",{\"1\":{\"11\":1}}],[\"yes\",{\"1\":{\"11\":3}}],[\"it\",{\"1\":{\"11\":2,\"17\":1}}],[\"if\",{\"1\":{\"11\":1}}],[\"interview\",{\"0\":{\"60\":1}}],[\"interface\",{\"0\":{\"48\":1},\"1\":{\"34\":1}}],[\"int\",{\"1\":{\"34\":2,\"38\":1}}],[\"in\",{\"1\":{\"11\":3}}],[\"324\",{\"1\":{\"34\":1}}],[\"32\",{\"1\":{\"34\":2}}],[\"3s\",{\"1\":{\"11\":1}}],[\"3\",{\"0\":{\"42\":1},\"1\":{\"11\":2,\"34\":1,\"40\":1}}],[\"64\",{\"1\":{\"34\":2}}],[\"6\",{\"1\":{\"11\":1}}],[\"606\",{\"1\":{\"11\":1}}],[\"639\",{\"1\":{\"11\":1}}],[\"61\",{\"1\":{\"11\":1}}],[\"8中\",{\"1\":{\"48\":1}}],[\"8开始\",{\"1\":{\"48\":1}}],[\"84\",{\"1\":{\"11\":1}}],[\"8080\",{\"1\":{\"11\":3,\"12\":1}}],[\"825ms\",{\"1\":{\"11\":1}}],[\"8\",{\"1\":{\"11\":2,\"34\":3}}],[\"83\",{\"1\":{\"11\":2}}],[\"127\",{\"1\":{\"34\":1}}],[\"128\",{\"1\":{\"11\":1,\"34\":1}}],[\"16\",{\"1\":{\"34\":2}}],[\"10\",{\"1\":{\"11\":2}}],[\"19\",{\"1\":{\"11\":1}}],[\"197\",{\"1\":{\"11\":1}}],[\"1\",{\"0\":{\"27\":1},\"1\":{\"11\":1,\"34\":7}}],[\"run\",{\"1\":{\"14\":1}}],[\"running\",{\"1\":{\"11\":2}}],[\"rc\",{\"1\":{\"11\":3}}],[\"rollup\",{\"1\":{\"11\":1}}],[\"return\",{\"0\":{\"39\":1},\"1\":{\"39\":1}}],[\"reused\",{\"1\":{\"11\":2}}],[\"resolved\",{\"1\":{\"11\":2}}],[\"我们无法正确输出子进程的进度条\",{\"1\":{\"11\":1}}],[\"仓库\",{\"1\":{\"11\":1}}],[\"你想要创建什么类型的项目\",{\"1\":{\"11\":1}}],[\"项目启动命令\",{\"0\":{\"14\":1}}],[\"项目需要用到多语言么\",{\"1\":{\"11\":1}}],[\"项目介绍\",{\"1\":{\"1\":1}}],[\"macos\",{\"1\":{\"29\":1}}],[\"machine\",{\"1\":{\"29\":1}}],[\"main\",{\"1\":{\"23\":1}}],[\"master的代码都是ts和一些markdown文件\",{\"1\":{\"22\":1}}],[\"master\",{\"1\":{\"16\":1,\"22\":1}}],[\"manually\",{\"1\":{\"11\":1}}],[\"make\",{\"1\":{\"11\":1}}],[\"move\",{\"1\":{\"11\":1}}],[\"modules\",{\"1\":{\"11\":2}}],[\"mit\",{\"1\":{\"11\":1}}],[\"my\",{\"1\":{\"10\":1,\"11\":2,\"14\":1,\"17\":1}}],[\"override\",{\"0\":{\"45\":1}}],[\"overload\",{\"0\":{\"45\":1}}],[\"on\",{\"1\":{\"16\":1}}],[\"of\",{\"1\":{\"11\":1}}],[\"ob\",{\"1\":{\"11\":4}}],[\"2^63\",{\"1\":{\"34\":2}}],[\"2^15\",{\"1\":{\"34\":2}}],[\"2^31\",{\"1\":{\"34\":2}}],[\"246\",{\"1\":{\"11\":1}}],[\"25\",{\"1\":{\"11\":1}}],[\"2\",{\"0\":{\"33\":1},\"1\":{\"11\":8,\"34\":2,\"40\":1}}],[\"22\",{\"1\":{\"11\":1}}],[\"long\",{\"0\":{\"38\":1},\"1\":{\"34\":2,\"38\":1}}],[\"localhost\",{\"1\":{\"11\":2,\"12\":1}}],[\"local\",{\"1\":{\"11\":3}}],[\"linux\",{\"1\":{\"29\":1}}],[\"listed\",{\"1\":{\"11\":1}}],[\"lang\",{\"1\":{\"17\":1}}],[\"language\",{\"1\":{\"11\":1}}],[\"abstract\",{\"0\":{\"48\":1}}],[\"at\",{\"1\":{\"11\":1}}],[\"already\",{\"1\":{\"11\":1}}],[\"a\",{\"1\":{\"11\":3}}],[\"added\",{\"1\":{\"11\":2}}],[\"switch\",{\"0\":{\"38\":1},\"1\":{\"38\":1}}],[\"short\",{\"1\":{\"34\":2,\"38\":1}}],[\"shouldprefetch\",{\"1\":{\"17\":1}}],[\"sdk\",{\"1\":{\"29\":1}}],[\"server\",{\"1\":{\"11\":1}}],[\"select\",{\"1\":{\"11\":1}}],[\"src\",{\"1\":{\"11\":1}}],[\"script\",{\"1\":{\"11\":1}}],[\"sourcemap\",{\"1\":{\"11\":1}}],[\"subdependencies\",{\"1\":{\"11\":1}}],[\"static修饰的方法\",{\"1\":{\"50\":1}}],[\"static等修饰符所修饰\",{\"1\":{\"49\":1}}],[\"static\",{\"1\":{\"48\":1,\"50\":1}}],[\"stars\",{\"1\":{\"4\":1}}],[\"star\",{\"0\":{\"4\":1}}],[\"string\",{\"1\":{\"38\":1}}],[\"string上\",{\"0\":{\"38\":1}}],[\"store\",{\"1\":{\"11\":2}}],[\"++和\",{\"1\":{\"41\":1}}],[\"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\",{\"1\":{\"11\":1}}],[\"++++++++\",{\"1\":{\"11\":1}}],[\"+\",{\"1\":{\"11\":4,\"49\":1}}],[\"+606\",{\"1\":{\"11\":1}}],[\"+83\",{\"1\":{\"11\":1}}],[\"this相当于是指向当前对象本身\",{\"1\":{\"47\":1}}],[\"this的用法在java中大体可以分为3种\",{\"1\":{\"47\":1}}],[\"this关键字有什么作用\",{\"0\":{\"47\":1}}],[\"then\",{\"1\":{\"11\":1}}],[\"the\",{\"1\":{\"11\":1}}],[\"theme\",{\"1\":{\"8\":1,\"10\":1,\"11\":5,\"17\":2}}],[\"title\",{\"1\":{\"17\":1}}],[\"ts\",{\"0\":{\"17\":1},\"1\":{\"23\":1}}],[\"terser\",{\"1\":{\"11\":1}}],[\"template\",{\"1\":{\"11\":2}}],[\"to\",{\"1\":{\"11\":2,\"20\":1}}],[\"tmp\",{\"1\":{\"11\":2}}],[\"virtual\",{\"1\":{\"29\":1}}],[\"visibility\",{\"1\":{\"20\":1}}],[\"vite\",{\"1\":{\"11\":1}}],[\"v5\",{\"1\":{\"11\":1}}],[\"vue\",{\"1\":{\"11\":1}}],[\"vuepress\",{\"1\":{\"10\":1,\"11\":8,\"17\":1}}],[\"v3\",{\"1\":{\"11\":2}}],[\"break\",{\"0\":{\"39\":1},\"1\":{\"39\":1}}],[\"branches\",{\"1\":{\"16\":1}}],[\"boolean\",{\"1\":{\"34\":2}}],[\"byte\",{\"0\":{\"38\":1},\"1\":{\"34\":2,\"38\":1}}],[\"base\",{\"1\":{\"17\":1}}],[\"baidusyncdisk\",{\"1\":{\"11\":2}}],[\"blogs\",{\"1\":{\"11\":1}}],[\"blogs>\",{\"1\":{\"11\":1}}],[\"blog\",{\"1\":{\"11\":1}}],[\"description\",{\"1\":{\"17\":1}}],[\"defineuserconfig\",{\"1\":{\"17\":1}}],[\"default\",{\"1\":{\"17\":1,\"46\":1}}],[\"development\",{\"1\":{\"29\":1}}],[\"dev\",{\"1\":{\"11\":3,\"14\":1}}],[\"devdependencies\",{\"1\":{\"11\":2}}],[\"demo\",{\"1\":{\"11\":1}}],[\"deploy\",{\"0\":{\"16\":1}}],[\"dependency\",{\"1\":{\"11\":2}}],[\"deprecated\",{\"1\":{\"11\":1}}],[\"display\",{\"1\":{\"11\":1}}],[\"double\",{\"1\":{\"34\":2}}],[\"done\",{\"1\":{\"11\":4}}],[\"downloaded\",{\"1\":{\"11\":2}}],[\"documents\",{\"1\":{\"11\":2}}],[\"docsbranch\",{\"1\":{\"23\":1}}],[\"docs的settings项\",{\"1\":{\"21\":1}}],[\"docs\",{\"0\":{\"16\":1},\"1\":{\"10\":1,\"11\":3,\"14\":2,\"17\":1,\"20\":1}}],[\"dlx\",{\"1\":{\"11\":2}}],[\"daiwencheng\",{\"1\":{\"11\":2}}],[\"char\",{\"1\":{\"34\":2,\"38\":1}}],[\"class\",{\"0\":{\"48\":1},\"1\":{\"31\":2,\"32\":1,\"34\":1}}],[\"class文件\",{\"1\":{\"31\":1}}],[\"client\",{\"1\":{\"11\":1}}],[\"cn\",{\"1\":{\"17\":1}}],[\"continue\",{\"0\":{\"39\":1},\"1\":{\"39\":1}}],[\"config\",{\"0\":{\"17\":1}}],[\"codec\",{\"1\":{\"11\":1}}],[\"c\",{\"1\":{\"11\":2}}],[\"create\",{\"1\":{\"10\":1,\"11\":1}}],[\"0d\",{\"1\":{\"34\":1}}],[\"0f\",{\"1\":{\"34\":1}}],[\"0l\",{\"1\":{\"34\":1}}],[\"0\",{\"1\":{\"11\":16,\"34\":5}}],[\"4028235e38\",{\"1\":{\"34\":1}}],[\"409\",{\"1\":{\"11\":1}}],[\"45\",{\"1\":{\"34\":1}}],[\"4e\",{\"1\":{\"34\":1}}],[\"4\",{\"1\":{\"11\":2,\"34\":3}}],[\"7976931348623157e308\",{\"1\":{\"34\":1}}],[\"7428\",{\"1\":{\"11\":2}}],[\"7\",{\"1\":{\"11\":2,\"38\":1}}],[\"创建对象有哪几种方式\",{\"0\":{\"57\":1}}],[\"创建过程\",{\"0\":{\"11\":1}}],[\"创建项目模板\",{\"0\":{\"10\":1}}],[\"private\",{\"0\":{\"46\":1},\"1\":{\"46\":1,\"49\":1}}],[\"protected和default修饰符\",{\"1\":{\"48\":1}}],[\"protected\",{\"0\":{\"46\":1},\"1\":{\"46\":1}}],[\"prod\",{\"1\":{\"11\":1}}],[\"project\",{\"1\":{\"11\":1}}],[\"progress\",{\"1\":{\"11\":2}}],[\"public\",{\"1\":{\"20\":1,\"46\":1,\"48\":1}}],[\"push\",{\"1\":{\"16\":1}}],[\"pwa\",{\"1\":{\"17\":1}}],[\"posts\",{\"0\":{\"58\":1}}],[\"postinstall\",{\"1\":{\"11\":1}}],[\"powershell\",{\"1\":{\"11\":1}}],[\"plugin\",{\"1\":{\"11\":1}}],[\"pages是发布分支\",{\"1\":{\"22\":1}}],[\"pages分支\",{\"0\":{\"22\":1}}],[\"pages\",{\"0\":{\"19\":1,\"21\":1},\"1\":{\"11\":1,\"21\":1,\"22\":1}}],[\"pages搭建\",{\"1\":{\"8\":1}}],[\"packages\",{\"1\":{\"11\":1}}],[\"package\",{\"1\":{\"11\":1}}],[\"ps\",{\"1\":{\"11\":1}}],[\"pnpm\",{\"1\":{\"10\":1,\"11\":5}}],[\"安装依赖\",{\"1\":{\"11\":1}}],[\"安装pnpm\",{\"1\":{\"9\":1}}],[\"安装nodejs\",{\"1\":{\"9\":1}}],[\"下载地址\",{\"1\":{\"9\":1}}],[\"准备运行环境\",{\"0\":{\"9\":1}}],[\"和常量\",{\"1\":{\"48\":1}}],[\"和接口\",{\"0\":{\"48\":1}}],[\"和接⼝\",{\"1\":{\"44\":1}}],[\"和重写\",{\"0\":{\"45\":1}}],[\"和⼯具\",{\"1\":{\"29\":1}}],[\"和\",{\"0\":{\"29\":1,\"37\":1},\"1\":{\"8\":1,\"29\":1}}],[\"三分钟搭建一个博客网站\",{\"0\":{\"7\":1,\"8\":1}}],[\"幻灯片页\",{\"0\":{\"6\":1}}],[\"主页\",{\"0\":{\"5\":1}}],[\"趋势\",{\"0\":{\"4\":1}}],[\"占个位\",{\"0\":{\"3\":1},\"1\":{\"3\":1}}],[\"关于作者\",{\"0\":{\"2\":1},\"1\":{\"2\":1}}],[\"关于网站\",{\"0\":{\"1\":1}}],[\"|\",{\"1\":{\"1\":1,\"11\":2}}],[\"传送门\",{\"1\":{\"1\":1}}],[\"欢迎来到鱼塘\",{\"1\":{\"1\":1}}],[\"鱼塘\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
